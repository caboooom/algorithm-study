import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.Arrays;

public class Main {

    private static class MyStack {

        private int[] arrayStack;
        private int top;
        private int size;

        public MyStack(){
            arrayStack = new int[500];
        }

        public void push(int value) {
            if (size == arrayStack.length) {
                arrayStack = Arrays.copyOf(arrayStack, arrayStack.length*2);
            }
            arrayStack[top++] = value;
            size++;
        }

        public void pop() {
            if (size == 0) {
                System.out.println(-1);
            } else {
                System.out.println(arrayStack[--top]);
                size--;
            }
        }

        public void size() {
            System.out.println(size);
        }

        private void empty() {
            System.out.println((size==0)?1:0);
        }

        private void top() {
            System.out.println((size==0)?-1:arrayStack[top-1]);
        }

    }

    public static void main(String[] args) throws Exception {

        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int N = Integer.parseInt(br.readLine());

        MyStack stack = new MyStack();

        for (int i = 0; i < N; i++) {
            String[] str = br.readLine().split(" ");

            if (str.length == 2) {  // push 명령
                stack.push(Integer.parseInt(str[1]));
            } else {                // 나머지 명령
                switch (str[0]) {
                    case "top" : stack.top(); break;
                    case "size" : stack.size(); break;
                    case "empty" : stack.empty(); break;
                    case "pop" : stack.pop(); break;
                }
            }
        }

    }
}